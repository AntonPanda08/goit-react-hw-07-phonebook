{"version":3,"sources":["components/phonebookList.module.css","components/header.module.css","components/contactForm.module.css","components/phoneBookItem.module.css","components/header.js","redux/contacts/contactAction.js","redux/contacts/contactOperations.js","components/phoneBookItem.js","redux/contacts/contactSelectors.js","components/phoneBookList.js","components/filter.js","components/contactForm.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","Header","header","CSSTransition","in","appear","timeout","classNames","styles","className","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","createContact","name","number","dispatch","contactAction","axios","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","connect","ownProps","onRemoveContact","contactOperations","phoneBookItem","Button","variant","type","onClick","size","getContactsArray","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","toLowerCase","includes","toLocaleLowerCase","getContactsLength","length","mapDispatchToProps","contactSelectors","TransitionGroup","component","phoneBookList","map","mapsDispatchToProps","onChangeFilter","value","onChange","e","target","ContactForm","showToast","handleChange","setState","NotificationError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","preventDefault","props","addContact","some","this","onSubmit","form","placeholder","required","addBtn","transition","Slide","newestOnTop","rtl","pauseOnFocusLoss","duration","Component","Phonebook","onFetchContacts","prevProps","prevState","container","unmountOnExit","createReducer","action","payload","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","middleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5fdc1e02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"phonebookList_enter__1dWXq\",\"enterActive\":\"phonebookList_enterActive__3jfip\",\"exit\":\"phonebookList_exit__2S3Ou\",\"exitActive\":\"phonebookList_exitActive__1LZw0\",\"container\":\"phonebookList_container__qMa_d\",\"phoneBookList\":\"phonebookList_phoneBookList__UVuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"header_appear__1uUo4\",\"appearActive\":\"header_appearActive__3nCkg\",\"header\":\"header_header__2sinX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__Xkver\",\"addBtn\":\"contactForm_addBtn__2XGip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookItem\":\"phoneBookItem_phoneBookItem__1GT0v\"};","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = ({ header }) => (\r\n  <CSSTransition in={true} appear timeout={500} classNames={styles}>\r\n    <h1 className={styles.header}>{header}</h1>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Header;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\nconst fetchContactRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchError\");\r\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactError = createAction(\"contacts/removeError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n};\r\n","import contactAction from \"./contactAction\";\r\nimport axios from \"axios\";\r\n\r\nconst createContact = (name, number) => (dispatch) => {\r\n  dispatch(contactAction.addContactRequest());\r\n  axios\r\n    .post(\"http://localhost:2000/contacts\", { name, number })\r\n    .then(({ data }) => {\r\n      dispatch(contactAction.addContactSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(contactAction.addContactError(error)));\r\n};\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactAction.fetchContactRequest());\r\n  axios\r\n    .get(\"http://localhost:2000/contacts\")\r\n    .then(({ data }) => dispatch(contactAction.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(contactAction.fetchContactError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactAction.removeContactRequest());\r\n  axios\r\n    .delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => dispatch(contactAction.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(contactAction.removeContactError(error)));\r\n};\r\n\r\nexport default {\r\n  createContact,\r\n  fetchContacts,\r\n  removeContact,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport styles from \"./phoneBookItem.module.css\";\r\nimport contactOperations from \"../redux/contacts/contactOperations\";\r\n\r\nconst PhoneBookItem = ({ name, number, id, onRemoveContact }) => (\r\n  <li className={styles.phoneBookItem}>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <Button variant=\"danger\" type=\"button\" onClick={onRemoveContact} size=\"sm\">\r\n      Delete\r\n    </Button>\r\n  </li>\r\n);\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () => dispatch(contactOperations.removeContact(ownProps.id)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(PhoneBookItem);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nconst getContactsArray = (state) => state.contacts.items;\r\nconst getContactsLength = (state) => getContactsArray(state).length;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getVisibleContacts = createSelector(\r\n  [getContactsArray, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\r\n    );\r\n  }\r\n);\r\nexport default {\r\n  getContactsArray,\r\n  getContactsLength,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport PhoneBookItem from \"./phoneBookItem\";\r\nimport contactAction from \"../redux/contacts/contactAction\";\r\nimport styles from \"./phonebookList.module.css\";\r\nimport contactSelectors from \"../redux/contacts/contactSelectors\";\r\n\r\nconst PhoneBookList = ({ contacts, onRemoveContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.phoneBookList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames={styles}>\r\n        <PhoneBookItem\r\n          id={id}\r\n          number={number}\r\n          name={name}\r\n          onRemoveContact={() => onRemoveContact(id)}\r\n        />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nPhoneBookList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getVisibleContacts(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactAction.removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport contactAction from \"../redux/contacts/contactAction\";\r\nimport { connect } from \"react-redux\";\r\nimport contactSelectors from \"../redux/contacts/contactSelectors\";\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <br />\r\n    <input\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={(e) => onChangeFilter(e.target.value)}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  filter: contactSelectors.getFilter(state),\r\n});\r\nconst mapsDispatchToProps = {\r\n  onChangeFilter: contactAction.changeFilter,\r\n};\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./contactForm.module.css\";\r\nimport contactOperations from \"../redux/contacts/contactOperations\";\r\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport contactSelectors from \"../redux/contacts/contactSelectors\";\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    showToast: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  NotificationError = () => {\r\n    toast.error(\"Contact already in list\", {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    this.setState({\r\n      showToast: true,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { contacts, addContact } = this.props;\r\n    const { name, number } = this.state;\r\n\r\n    if (\r\n      contacts.some(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      this.NotificationError();\r\n      return;\r\n    }\r\n\r\n    addContact(name, number);\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"What's your name?\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"What's your phone?\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <Button\r\n          variant=\"info\"\r\n          type=\"submit\"\r\n          value=\"submit\"\r\n          className={styles.addBtn}\r\n        >\r\n          {\" \"}\r\n          Add contact\r\n        </Button>\r\n        <CSSTransition in={this.state.showToast} timeout={250}>\r\n          <ToastContainer\r\n            transition={Slide}\r\n            position=\"top-right\"\r\n            autoClose={3000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            duration={250}\r\n          />\r\n        </CSSTransition>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactOperations.createContact,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getContactsArray(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Header from \"./components/header\";\nimport { connect } from \"react-redux\";\nimport PhoneBookList from \"./components/phoneBookList\";\nimport Filter from \"./components/filter\";\nimport ContactForm from \"./components/contactForm\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport styles from \"./components/phonebookList.module.css\";\nimport contactOperations from \"./redux/contacts/contactOperations\";\nimport contactSelectors from \"./redux/contacts/contactSelectors\";\n\nclass Phonebook extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // if (prevState.contacts !== this.state.contacts) {\n    //   localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    // }\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <div className={styles.container}>\n        <Header header=\"Phonebook\" />\n        <ContactForm />\n        <br />\n        <CSSTransition\n          in={contacts > 1}\n          timeout={250}\n          unmountOnExit\n          classNames={styles}\n        >\n          <Filter />\n        </CSSTransition>\n        <br />\n        <PhoneBookList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactSelectors.getContactsLength(state),\n});\nconst mapDispatchToProps = {\n  onFetchContacts: contactOperations.fetchContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactAction from \"./contactAction\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst removeContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\nconst items = createReducer([], {\r\n  [contactAction.fetchContactSuccess]: (state, action) => action.payload,\r\n  [contactAction.addContactSuccess]: addContact,\r\n  [contactAction.removeContactSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactAction.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: [...defaultMiddleware],\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Phonebook from \"./App\";\nimport store from \"../src/redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <Phonebook />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}